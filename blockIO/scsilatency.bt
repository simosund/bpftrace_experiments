#!/usr/bin/env bpftrace

#include <scsi/scsi_cmnd.h>

BEGIN
{
  printf("Tracing scsi latency. Hit Ctrl-C to end\n");
  // SCSI opcodes from scsi/scsi_proto.h, add more mappings if desired
  @opcode[0x00] = "TEST_UNIT_READY";
  @opcode[0x03] = "REQUEST_SENSE";
  @opcode[0x08] = "READ_6";
  @opcode[0x0a] = "WRITE_6";
  @opcode[0x0b] = "SEEK_6";
  @opcode[0x12] = "INQUIRY";
  @opcode[0x18] = "ERASE";
  @opcode[0x28] = "READ_10";
  @opcode[0x2a] = "WRITE_10";
  @opcode[0x2b] = "SEEK_10";
  @opcode[0x35] = "SYNCHRONIZE_CACHE";
  @opcode[0x4a] = "GET_EVENT_STATUS_NOTIFICATION";
}

kprobe:scsi_init_io
{
  @start[arg0] = nsecs;
}

//kprobe:scisci_done,
kprobe:scsi_mq_done
/@start[arg0]/
{
  $cmnd = (struct scsi_cmnd *)arg0;
  $opcode = *$cmnd->req.cmd & 0xff;
  @usecs[$opcode, @opcode[$opcode]] = hist((nsecs - @start[arg0]) / 1000);
}

END
{
  clear(@start); clear(@opcode);
}
